@font-face {
  font-family: "icons";
  src: url("../fonts/dist/icons.eot");
  src: url("../fonts/dist/icons.eot?#iefix") format("eot"), url("../fonts/dist/icons.woff") format("woff"), url("../fonts/dist/icons.ttf") format("truetype"), url("../fonts/dist/icons.svg#icons") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon-search:before,
[data-icon="search"]:before {
  font-family: 'icons';
  display: inline-block;
  vertical-align: middle;
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  speak: none;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-search:before,
[data-icon="search"]:before {
  content: "\EA01"; }

.uppercase {
  text-transform: uppercase; }

.group:after, .width-restrict:after {
  content: "";
  display: table;
  clear: both; }

.sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0; }

.width-restrict {
  width: 100%;
  max-width: 1320px;
  margin: 0 auto; }
  .\--content.width-restrict {
    max-width: 70rem;
    margin: 0 auto; }

.icon-search:before,
[data-icon="search"]:before {
  font-family: 'icons';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased; }

/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box; }

img {
  max-width: 100%;
  display: block; }

body {
  background: #131E2A; }

body {
  font-family: "Lato", sans-serif;
  color: white; }

input, button {
  font-family: "Lato", sans-serif;
  color: white; }

button, input[type="button"] {
  background: none;
  border: none; }

.content {
  width: 50rem;
  display: block;
  margin-left: auto;
  margin-right: auto; }
  .content.\--top {
    margin-top: 5rem; }

button, input[type="button"] {
  cursor: pointer;
  outline: none; }
  button.\--primary, input[type="button"].\--primary {
    background: #294461;
    padding: 1rem; }

.search__query-container {
  position: relative; }
  .search__query-container.\--focused .search__query__icon {
    left: -3.5rem; }

.search__query {
  padding: 2rem;
  font-size: 1.5rem;
  font-weight: 200;
  border: 1px solid rgba(255, 255, 255, 0.6);
  transition: 0.2s;
  outline: none;
  width: 100%;
  background: #1c2a3a;
  position: relative; }
  .search__query:focus {
    border-color: white; }
  .search__query__icon {
    position: absolute;
    top: 0.5rem;
    left: 0;
    font-size: 3rem;
    transition: 0.15s ease-in-out; }

.search__filters {
  display: none; }

.search-filter-attribute {
  display: inline-block;
  overflow: hidden;
  opacity: 1;
  transition: 0.3s; }
  .search-filter-attribute.\--hidden {
    max-width: 0 !important;
    max-height: 0 !important;
    opacity: 0; }

.item-grid {
  display: block; }

.item-card {
  display: block;
  width: 20rem;
  background: #2d4054; }
  .item-card.\--expanded {
    width: 50rem; }
  .item-card__image {
    width: 4rem;
    height: 4rem; }

/*# sourceMappingURL=data:application/json;base64, */